%===============================================================
%=== Plot Cylinder Version 1.00
%===
%=== This function plot, using patches, a 3D representation of a
%=== cylinder border with its axis along the x axis (sufficient
%=== for the first application, could be extended...). The border
%=== is made of 12 rectangle which gives a correct aspect.
%=== 
%=== Input:         cog     center of gravity of cylinder
%===                lx      height (or length) of the cylinder
%===                d       diameter
%===                color   color array (ex: [1,0,0] for red)
%===                
%=== Output:        none
%=== Graphical Out: 3D representation of the cylinder in the
%===                current active figure window
%===
%=== More info:     Search "patch" and "3-D" in Matlab-Help
%===
%=== Author: André Noth
%===         andre.noth@epfl.ch
%===         http://aero.epfl.ch
%===
%===============================================================


function plot_cylinder(cog,lx,d,color)

vertex_list = [cog(1)-lx/2, cog(2)+d/2*sin(00*pi/6), cog(3)+d/2*cos(00*pi/6); ...   % List of point coordinates
               cog(1)-lx/2, cog(2)+d/2*sin(01*pi/6), cog(3)+d/2*cos(01*pi/6); ...
               cog(1)-lx/2, cog(2)+d/2*sin(02*pi/6), cog(3)+d/2*cos(02*pi/6); ...
               cog(1)-lx/2, cog(2)+d/2*sin(03*pi/6), cog(3)+d/2*cos(03*pi/6); ...
               cog(1)-lx/2, cog(2)+d/2*sin(04*pi/6), cog(3)+d/2*cos(04*pi/6); ...
               cog(1)-lx/2, cog(2)+d/2*sin(05*pi/6), cog(3)+d/2*cos(05*pi/6); ...
               cog(1)-lx/2, cog(2)+d/2*sin(06*pi/6), cog(3)+d/2*cos(06*pi/6); ...
               cog(1)-lx/2, cog(2)+d/2*sin(07*pi/6), cog(3)+d/2*cos(07*pi/6); ...
               cog(1)-lx/2, cog(2)+d/2*sin(08*pi/6), cog(3)+d/2*cos(08*pi/6); ...
               cog(1)-lx/2, cog(2)+d/2*sin(09*pi/6), cog(3)+d/2*cos(09*pi/6); ...
               cog(1)-lx/2, cog(2)+d/2*sin(10*pi/6), cog(3)+d/2*cos(10*pi/6); ...
               cog(1)-lx/2, cog(2)+d/2*sin(11*pi/6), cog(3)+d/2*cos(11*pi/6); ...
               
               cog(1)+lx/2, cog(2)+d/2*sin(00*pi/6), cog(3)+d/2*cos(00*pi/6); ...   % List of interconnection between points
               cog(1)+lx/2, cog(2)+d/2*sin(01*pi/6), cog(3)+d/2*cos(01*pi/6); ...
               cog(1)+lx/2, cog(2)+d/2*sin(02*pi/6), cog(3)+d/2*cos(02*pi/6); ...
               cog(1)+lx/2, cog(2)+d/2*sin(03*pi/6), cog(3)+d/2*cos(03*pi/6); ...
               cog(1)+lx/2, cog(2)+d/2*sin(04*pi/6), cog(3)+d/2*cos(04*pi/6); ...
               cog(1)+lx/2, cog(2)+d/2*sin(05*pi/6), cog(3)+d/2*cos(05*pi/6); ...
               cog(1)+lx/2, cog(2)+d/2*sin(06*pi/6), cog(3)+d/2*cos(06*pi/6); ...
               cog(1)+lx/2, cog(2)+d/2*sin(07*pi/6), cog(3)+d/2*cos(07*pi/6); ...
               cog(1)+lx/2, cog(2)+d/2*sin(08*pi/6), cog(3)+d/2*cos(08*pi/6); ...
               cog(1)+lx/2, cog(2)+d/2*sin(09*pi/6), cog(3)+d/2*cos(09*pi/6); ...
               cog(1)+lx/2, cog(2)+d/2*sin(10*pi/6), cog(3)+d/2*cos(10*pi/6); ...
               cog(1)+lx/2, cog(2)+d/2*sin(11*pi/6), cog(3)+d/2*cos(11*pi/6)];

vertex_connection = [1,2,14,13; ...
                     2,3,15,14; ...
                     3,4,16,15; ...
                     4,5,17,16; ...
                     5,6,18,17; ...
                     6,7,19,18; ...
                     7,8,20,19; ...
                     8,9,21,20; ...
                     9,10,22,21; ...
                     10,11,23,22; ...
                     11,12,24,23; ...
                     12,1,13,24];
               
                 
patch('Vertices',vertex_list, ...                       % List of point coordinates
      'Faces',vertex_connection, ...                    % List of interconnection between points
      'FaceColor',color, ...                            % Color of face
      'FaceAlpha',0.2)                                  % Transparency set to 0.2 (high)

end
               