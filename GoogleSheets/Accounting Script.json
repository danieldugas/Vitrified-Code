{"files":[{"id":"4fe4d1ab-bc38-485f-af1c-41549ea9cde4","name":"Accounting Functions","type":"server_js","source":"//gives a background color to even days, and another to odd days.\nfunction setRowColor() \n{\n  var range \u003d SpreadsheetApp.getActiveSpreadsheet().getSheetByName(\u0027Main\u0027).getDataRange();\n  var dayColumnOffset \u003d 3;\n  var rowWidth \u003d 7; //amount of columns affected per row\n  var firstRow \u003d 3; //vertical offset of starting row\n  \n  for (var i \u003d firstRow; i \u003c\u003d range.getLastRow(); i++) \n  {\n    var rowRange \u003d range.offset(i, 1, 1, rowWidth);\n    date \u003d range.offset(i, dayColumnOffset, 1, 1).getValue();\n    \n    if ( (date % 2) \u003d\u003d 0) \n    {\n      rowRange.setBackgroundColor(\"#FFFFFF\");\n    } \n    else if ( (date % 2) \u003d\u003d 1) \n    {\n      rowRange.setBackgroundColor(\"#F3F3F3\");    \n    }\n    \n  } //for end\n} //function end\n\n\n\n//generates treemap compatible data in the analysisII sheet\nfunction generateTreemapData() \n{  \n  var initialRow \u003d 56;\n  var monthColumn \u003d 6;\n  var monthNumberColumn \u003d 7;\n  var dayColumn \u003d 5;\n  var descriptionColumn \u003d 2;\n  var categoryColumn \u003d 3;\n  var priceColumn \u003d 4;\n  var rowWidth \u003d 6;\n  \n  var ss \u003d SpreadsheetApp.getActiveSpreadsheet();\n  var mainSheet \u003d ss.getSheetByName(\u0027Main\u0027);\n  var workSheet \u003d ss.getSheetByName(\u0027Analysis II\u0027);\n  var sheetHeight \u003d workSheet.getMaxRows();\n  \n  workSheet.getDataRange().offset(initialRow-1,0).clearContent();\n  \n  //importing data from main sheet\n  \n  var destinationRange \u003d workSheet.getDataRange().offset(initialRow-1,descriptionColumn-1,1,1);\n  \n  //september\n  var monthID \u003d \"Sep\";\n  var monthNumber \u003d 9;\n  \n  var descRange \u003d ss.getRangeByName(monthID+\"_Desc\");\n  var catRange \u003d ss.getRangeByName(monthID+\"_Cat\");\n  var priceRange  \u003d ss.getRangeByName(monthID+\"_Price\");\n  var dayRange \u003d ss.getRangeByName(monthID+\"_Day\");\n  var height \u003d catRange.getHeight();\n  \n  destinationRange \u003d destinationRange.offset(0,0,height,1);\n  descRange.copyTo(destinationRange,{contentsOnly:true});\n  catRange.copyTo(destinationRange.offset(0, categoryColumn-descriptionColumn),{contentsOnly:true});\n  priceRange.copyTo(destinationRange.offset(0, priceColumn-descriptionColumn),{contentsOnly:true});\n  dayRange.copyTo(destinationRange.offset(0, dayColumn-descriptionColumn),{contentsOnly:true});\n  destinationRange.offset(0, monthColumn-descriptionColumn).setValue(monthID);\n  destinationRange.offset(0, monthNumberColumn-descriptionColumn).setValue(monthNumber);\n  destinationRange \u003d destinationRange.offset(height,0,1,1);\n  \n  //october\n  var monthID \u003d \"Oct\";\n  var monthNumber \u003d 10;\n  \n  var descRange \u003d ss.getRangeByName(monthID+\"_Desc\");\n  var catRange \u003d ss.getRangeByName(monthID+\"_Cat\");\n  var priceRange  \u003d ss.getRangeByName(monthID+\"_Price\");\n  var dayRange \u003d ss.getRangeByName(monthID+\"_Day\");\n  var height \u003d catRange.getHeight();\n  \n  destinationRange \u003d destinationRange.offset(0,0,height,1);\n  descRange.copyTo(destinationRange,{contentsOnly:true});\n  catRange.copyTo(destinationRange.offset(0, categoryColumn-descriptionColumn),{contentsOnly:true});\n  priceRange.copyTo(destinationRange.offset(0, priceColumn-descriptionColumn),{contentsOnly:true});\n  dayRange.copyTo(destinationRange.offset(0, dayColumn-descriptionColumn),{contentsOnly:true});\n  destinationRange.offset(0, monthColumn-descriptionColumn).setValue(monthID);\n  destinationRange.offset(0, monthNumberColumn-descriptionColumn).setValue(monthNumber);\n  destinationRange \u003d destinationRange.offset(height,0,1,1);\n  \n  //november\n  var monthID \u003d \"Nov\";\n  var monthNumber \u003d 11;\n  \n  var descRange \u003d ss.getRangeByName(monthID+\"_Desc\");\n  var catRange \u003d ss.getRangeByName(monthID+\"_Cat\");\n  var priceRange  \u003d ss.getRangeByName(monthID+\"_Price\");\n  var dayRange \u003d ss.getRangeByName(monthID+\"_Day\");\n  var height \u003d catRange.getHeight();\n  \n  destinationRange \u003d destinationRange.offset(0,0,height,1);\n  descRange.copyTo(destinationRange,{contentsOnly:true});\n  catRange.copyTo(destinationRange.offset(0, categoryColumn-descriptionColumn),{contentsOnly:true});\n  priceRange.copyTo(destinationRange.offset(0, priceColumn-descriptionColumn),{contentsOnly:true});\n  dayRange.copyTo(destinationRange.offset(0, dayColumn-descriptionColumn),{contentsOnly:true});\n  destinationRange.offset(0, monthColumn-descriptionColumn).setValue(monthID);\n  destinationRange.offset(0, monthNumberColumn-descriptionColumn).setValue(monthNumber);\n  destinationRange \u003d destinationRange.offset(height,0,1,1);\n  \n  //december\n  var monthID \u003d \"Dec\";\n  var monthNumber \u003d 12;\n  \n  var descRange \u003d ss.getRangeByName(monthID+\"_Desc\");\n  var catRange \u003d ss.getRangeByName(monthID+\"_Cat\");\n  var priceRange  \u003d ss.getRangeByName(monthID+\"_Price\");\n  var dayRange \u003d ss.getRangeByName(monthID+\"_Day\");\n  var height \u003d catRange.getHeight();\n  \n  destinationRange \u003d destinationRange.offset(0,0,height,1);\n  descRange.copyTo(destinationRange,{contentsOnly:true});\n  catRange.copyTo(destinationRange.offset(0, categoryColumn-descriptionColumn),{contentsOnly:true});\n  priceRange.copyTo(destinationRange.offset(0, priceColumn-descriptionColumn),{contentsOnly:true});\n  dayRange.copyTo(destinationRange.offset(0, dayColumn-descriptionColumn),{contentsOnly:true});\n  destinationRange.offset(0, monthColumn-descriptionColumn).setValue(monthID);\n  destinationRange.offset(0, monthNumberColumn-descriptionColumn).setValue(monthNumber);\n  destinationRange \u003d destinationRange.offset(height,0,1,1);\n\n  \n  //sorting imported data\n  workSheet.getDataRange().offset(initialRow-1,0).sort([categoryColumn,descriptionColumn]);\n  \n \n  //dealing with duplicates in description row\n  \n  var previousDescRange;\n  var previousDescValue;\n  var previousCatRange;\n  var currentDayValue;\n  var currentMonthRange;\n  var currentMonthValue;\n  var currentDescRange;\n  var currentDescValue;\n  var currentCatRange;\n  var currentCatValue;\n  var currentDate;\n  var nextDescRange;\n  var nextDescValue;\n  \n  var sheetHeight \u003d workSheet.getMaxRows();\n  \n  var insideRepetition \u003d 0;\n  var currentRow \u003d initialRow-1;\n  for (var i \u003d initialRow; i \u003c sheetHeight; i++) \n  {\n    currentRow++;\n    \n    currentDescRange \u003d workSheet.getDataRange().offset(currentRow-1, descriptionColumn-1,1,1);\n    currentDescValue \u003d currentDescRange.getValue();\n    currentCatRange \u003d workSheet.getDataRange().offset(currentRow-1, categoryColumn-1,1,1)\n    currentCatValue \u003d currentCatRange.getValue();\n    currentDayValue \u003d workSheet.getDataRange().offset(currentRow-1, dayColumn-1,1,1).getValue();\n    currentMonthRange \u003d workSheet.getDataRange().offset(currentRow-1, monthColumn-1,1,1);\n    currentMonthValue \u003d currentMonthRange.getValue();\n    currentDate \u003d currentMonthValue + \". \" + currentDayValue + \" \" + currentDescValue;\n    \n    nextDescRange \u003d workSheet.getDataRange().offset(currentRow, descriptionColumn-1,1,1);\n    nextDescValue \u003d nextDescRange.getValue(); \n    \n    if ( currentCatRange.isBlank() )\n    {\n      workSheet.deleteRow(currentRow);\n      currentRow--;\n    } \n    \n    else // (current Category is not blank)\n    {\n      if ( nextDescValue.equals(currentDescValue) ) \n      {\n        if ( insideRepetition \u003d\u003d 0 ) \n        {\n          \n          //we enter a repetition\n          insideRepetition \u003d 1;\n          workSheet.insertRowBefore(currentRow);\n          currentRow++;\n          previousDescRange \u003d workSheet.getDataRange().offset(currentRow-2, descriptionColumn-1,1,1);\n          previousCatRange \u003d workSheet.getDataRange().offset(currentRow-2, categoryColumn-1,1,1);\n          currentDescRange \u003d workSheet.getDataRange().offset(currentRow-1, descriptionColumn-1,1,1);\n          currentDescValue \u003d currentDescRange.getValue();\n          currentCatRange \u003d workSheet.getDataRange().offset(currentRow-1, categoryColumn-1,1,1)\n          currentCatValue \u003d currentCatRange.getValue();\n          currentDayValue \u003d workSheet.getDataRange().offset(currentRow-1, dayColumn-1,1,1).getValue();\n        \n          previousDescRange.setValue(currentDescValue);\n          previousCatRange.setValue(currentCatValue);\n          \n        } //if end (outside of repetition)\n        \n      currentCatRange.setValue(currentDescValue);\n      currentDescRange.setValue( currentDate );\n        \n      } //if end (current and next description are the same)\n      \n      else // (next and current description are different)\n      {\n        if ( insideRepetition \u003d\u003d 1)\n        {\n          //we exit a repetition \n          insideRepetition \u003d 0;\n          \n          currentCatRange.setValue(currentDescValue);\n          currentDescRange.setValue( currentDate );\n        }\n      } \n      \n    } //else end (current Category is not blank)\n  } //for end\n  \n  var rowDelta \u003d rowWidth+1;\n  workSheet.getDataRange().offset(initialRow-1,1+rowDelta,1,1).setFormula(\"\u003dArrayFormula(B\"+initialRow+\":D)\");\n  workSheet.getDataRange().offset(initialRow-1,1+rowDelta+3,1,1).setFormula(\"\u003dArrayFormula(G\"+initialRow+\":G)\");\n  workSheet.getDataRange().offset(initialRow-1,1+2*rowDelta,1,1).setFormula(\"\u003dQuery(B\"+initialRow+\":G;\\\"select * where F\u003d\u0027Sep\u0027 or F\u003d\u0027\u0027\\\",1)\");\n  workSheet.getDataRange().offset(initialRow-1,1+3*rowDelta,1,1).setFormula(\"\u003dQuery(B\"+initialRow+\":G;\\\"select * where F\u003d\u0027Oct\u0027 or F\u003d\u0027\u0027\\\",1)\");\n  workSheet.getDataRange().offset(initialRow-1,1+4*rowDelta,1,1).setFormula(\"\u003dQuery(B\"+initialRow+\":G;\\\"select * where F\u003d\u0027Nov\u0027 or F\u003d\u0027\u0027\\\",1)\");\n  workSheet.getDataRange().offset(initialRow-1,1+5*rowDelta,1,1).setFormula(\"\u003dQuery(B\"+initialRow+\":G;\\\"select * where F\u003d\u0027Dec\u0027 or F\u003d\u0027\u0027\\\",1)\");\n  \n} //function end\n"},{"id":"61896a3f-1a28-4937-a516-e4c72e68543e","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"Europe/Paris\",\n  \"dependencies\": {\n  },\n  \"exceptionLogging\": \"STACKDRIVER\"\n}"}]}