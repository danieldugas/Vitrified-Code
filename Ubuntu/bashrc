### ------------- PERSONAL PREFERENCE --------------###
# To show real-time log while booting and shutting down, edit
# /etc/default/grub
# change
# GRUB_CMDLINE_LINUX_DEFAULT="quiet splash"
# to
# GRUB_CMDLINE_LINUX_DEFAULT=""

# Gitview (Pretty Git Log)
alias gitview="git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all"

# git_watch
export PATH="$HOME/Documents/git-watch:$PATH"

# Functions to jump straight to a workspace
workondirectory() {
  cd $1
  git fetch &
  tree
  git status
}

# Default editors
export EDITOR=vim
export VISUAL=vim

# Source my personal python packages
export PYTHONPATH="$HOME/Documents/pyniel:$PYTHONPATH"

# Aliases
alias ml3env="source ~/ml3/bin/activate"
alias segmappyenv="source ~/segmappyenv/bin/activate"
alias rospyenv="source ~/rospyenv/bin/activate"
alias wopyniel="workondirectory ~/Documents/pyniel/pyniel"
alias wopepper="workondirectory ~/Documents/pepper_ws/src/asl_pepper && source ./.bashrc && cd asl_pepper_motion_planning"
alias wosegmap="source_segmap && segmappyenv && roscd segmapper && cd .."
alias wocarto="source ~/Documents/cartographer_ws/devel/setup.bash && cd ~/Documents/pepper_ws/src/asl_pepper/asl_pepper_cartographer"
alias woaslslam="workondirectory ~/Documents/pepper_ws/src/asl_pepper/asl_slam && source ~/Documents/pepper_ws/devel/setup.bash"
alias easytensorboard="source ~/ml3/bin/activate && tensorboard --logdir=/tmp/tf/tensorboard"
alias swim="nautilus ."
alias jpnb="jupyter notebook"
rm() {
    if [[ $@ == "-rf ~" ]]; then
        echo "HELL NO"
    elif [[ $@ == "-rf /" ]]; then
        echo "OH HELL NO"
    else
        command rm "$@"
    fi
}

export PATH="$HOME/Documents/simple-sync:$PATH"
export PATH="$HOME/Documents/SageMath:$PATH"
# Quick mathematical python
alias py="ml3env && ipython --pylab"

# Replace the PS1 setup lines with this in code above to enable git branch display
function parse_git_branch () {
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}
PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\] $(parse_git_branch)\$ '

# Run this only once if application windows don't get foregrounded when you launch the application:
# dconf write /org/compiz/profiles/unity/plugins/core/focus-prevention-level 0

# Create personal man pages
umedit() { mkdir -p ~/man; vim ~/man/"$1.txt"; }
um() { 
  if [ -z "$1" ]; then
    echo "Manuals for the following functions are available: "
    ls ~/man | sed -e 's/\.txt//g'
  else
    less ~/man/"$1.txt"
  fi
}
template() {
  if [ -z "$1" ]; then
    echo "Available templates: "
    tree ~/templates
  else
    vim ~/templates/"$1".*
  fi
}
logbook() {
  vim ~/logbook/$(date +'%Y%m%d.txt')
}

# Find which wallpaper based on watermark
whichwallpaper() {
  ls "$HOME/Pictures/Wallpapers/Earthview Wallpapers" | grep "$1"
}

### ------------- COMPUTER SPECIFIC  --------------###

###     oceanus
if [ $MACHINE_NAME = oceanus ]; then
  git-watch --quiet &
  git-watch --bad-only --no-fetch
# added by Anaconda2 4.0.0 installer
  export PATH="$HOME/anaconda2/bin:$PATH"
fi

###     prometheus
if [ $MACHINE_NAME = prometheus ]; then

  git-watch --quiet &
  git-watch --bad-only --no-fetch
  # Matlab
  alias matlab="/usr/local/MATLAB/R2018a/bin/matlab"
  # Pepper ros project
  source ~/Documents/pepper_ws/devel/setup.bash
  export PYTHONPATH="$PYTHONPATH:$HOME/Documents/pynaoqi-python2.7-2.5.5.5-linux64/lib/python2.7/site-packages"
  # Segmap ros project
  alias source_segmap="source ~/Documents/segmatch_ws/devel/setup.bash"
  alias wosegmap="source_segmap && roscd segmapper && cd .."
  # Group share
  mountgroupshare() {
    mkdir -p /media/groupserver
    echo "Password for ETH ASL group share (mystudies password): "
    read -s password
    sudo mount -t cifs -o vers=2.0,username=dugasd,password=$password //nas12.ethz.ch/mavt_iris_asl_1 /media/groupserver/
  }
fi

###     Pepper laptop
if [ $MACHINE_NAME = pepper_laptop ]; then
  git-watch --quiet &
  git-watch --bad-only --no-fetch
  source /opt/ros/kinetic/setup.sh
  source ~/Documents/pepper_ws/devel/setup.bash
  export PYTHONPATH="$PYTHONPATH:$HOME/Documents/pynaoqi-python2.7-2.5.7.1-linux64/lib/python2.7/site-packages"
  alias activateboostmode1000="sudo ethtool -s enp0s31f6 speed 1000 duplex full"
  alias source_segmap="source ~/Documents/segmap_ws/devel/setup.bash"
  export PATH="$PATH:$HOME/Documents/gotop"
fi

if [ $MACHINE_NAME = leonhard ]; then
  echo "How to install arbitrary python modules in a gpu node"
  echo "1.) bsub -Is -W 4:00 -R \"rusage[ngpus_excl_p=1, mem=4096]\" bash"
  echo "2.) module load eth_proxy python_gpu/3.6.4"
  echo "3.) pip install --user tensorflow_gpu==1.12.0"
fi
